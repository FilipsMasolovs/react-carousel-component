{"ast":null,"code":"var _jsxFileName = \"/Users/filipsmasolovs/Downloads/react-image-slider-master/src/Slider.js\";\nimport React from 'react';\nimport './Styles.css';\nimport Slide from './Slide';\nimport bg from './assets/1.jpg';\nexport default class Slider extends React.Component {\n  constructor(props) {\n    super(props); // this.data = [\n    //   {\n    //     bgColor: 'red',\n    //     content: (\n    //       <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100%'}}>\n    //         Hello!<br/>This is a simple demonstration of slider content</div>\n    //     )\n    //   },\n    //   {\n    //     bgColor: 'blue',\n    //     content: (\n    //       <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100%'}}>\n    //       <h1>Simply add an H1 tag in the content!</h1></div>\n    //     )\n    //   },\n    //   {\n    //     bgColor: 'green',\n    //     content: (\n    //       <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100%'}}>\n    //       <h2>Yes! You should play around with styles...</h2></div>\n    //     )\n    //   },\n    //   {\n    //     bgColor: 'orange',\n    //     content: (\n    //       <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100%'}}>\n    //       <p>And you can!!!</p></div>\n    //     )\n    //   },\n    //   {\n    //     bgImage: bg,\n    //     content: (\n    //       <div style={{display: 'flex', alignItems: 'flex-start', justifyContent: 'center', height: '100%', color: 'white'}}>\n    //       <p>Here is a case of using a background image initially...</p></div>\n    //     )\n    //   },\n    //   {\n    //     bgColor: 'brown',\n    //     content: (\n    //       <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100%'}}>\n    //       <span>Technically I could include a button here, but I put a SPAN!</span></div>\n    //     )\n    //   }\n    // ]\n\n    this.state = {\n      transformSpeed: 1,\n      currentSlide: {\n        slide: 1,\n        transform: -360\n      }\n    };\n    this.nextSlide = this.nextSlide.bind(this);\n    this.prevSlide = this.prevSlide.bind(this);\n    this.dotClick = this.dotClick.bind(this);\n    this.sliderMouseEnter = this.sliderMouseEnter.bind(this);\n    this.sliderMouseLeave = this.sliderMouseLeave.bind(this);\n    this.handleLastSlide = this.handleLastSlide.bind(this);\n    this.handleFirstSlide = this.handleFirstSlide.bind(this);\n    this.handleAutoplay();\n  }\n\n  handleLastSlide() {\n    this.setState({\n      transformSpeed: 0,\n      currentSlide: {\n        slide: 1,\n        transform: -360\n      }\n    });\n  }\n\n  handleFirstSlide() {\n    this.setState({\n      transformSpeed: 0,\n      currentSlide: {\n        slide: this.data.length,\n        transform: -(this.data.length * 360)\n      }\n    });\n  }\n\n  nextSlide() {\n    let sliderContainer = document.getElementById('slides-container');\n    sliderContainer.removeEventListener('transitionend', this.handleLastSlide);\n    this.setState({\n      transformSpeed: 1\n    });\n\n    if (this.state.currentSlide.slide === this.data.length) {\n      this.setState({\n        currentSlide: {\n          slide: 1,\n          transform: this.state.currentSlide.transform - 360\n        }\n      });\n      sliderContainer.addEventListener('transitionend', this.handleLastSlide);\n    } else {\n      this.setState({\n        currentSlide: {\n          slide: this.state.currentSlide.slide + 1,\n          transform: this.state.currentSlide.transform - 360\n        }\n      });\n    }\n  }\n\n  prevSlide() {\n    let sliderContainer = document.getElementById('slides-container');\n    sliderContainer.removeEventListener('transitionend', this.handleFirstSlide);\n    this.setState({\n      transformSpeed: 1\n    });\n\n    if (this.state.currentSlide.slide === 1) {\n      this.setState({\n        currentSlide: {\n          slide: this.data.length,\n          transform: this.state.currentSlide.transform + 360\n        }\n      });\n      sliderContainer.addEventListener('transitionend', this.handleFirstSlide);\n    } else {\n      this.setState({\n        currentSlide: {\n          slide: this.state.currentSlide.slide - 1,\n          transform: this.state.currentSlide.transform + 360\n        }\n      });\n    }\n  }\n\n  dotClick(event) {\n    let currentDot = parseInt(event.currentTarget.getAttribute('data-dot-index'));\n    this.setState({\n      currentSlide: {\n        slide: currentDot,\n        transform: -(currentDot * 360)\n      }\n    });\n  }\n\n  getDots() {\n    let dotsContent = [];\n\n    for (let i = 0; i < this.data.length; i++) {\n      let dotClassName = \"dot\";\n\n      if (i + 1 === this.state.currentSlide.slide) {\n        dotClassName += \" active-dot\";\n      }\n\n      dotsContent.push( /*#__PURE__*/React.createElement(\"button\", {\n        className: dotClassName,\n        \"data-dot-index\": i + 1,\n        key: `dot-${i}`,\n        onClick: this.dotClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 24\n        }\n      }));\n    }\n\n    return dotsContent;\n  }\n\n  getSlide() {\n    let slides = [];\n    let slideArray = this.data;\n    slides.push( /*#__PURE__*/React.createElement(Slide, {\n      key: 'DuplicatedLastSlide',\n      id: 'DuplicatedLastSlide',\n      bgImage: slideArray[slideArray.length - 1].bgImage,\n      bgColor: slideArray[slideArray.length - 1].bgColor,\n      content: slideArray[slideArray.length - 1].content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 7\n      }\n    }));\n    slideArray.forEach((item, index) => {\n      slides.push( /*#__PURE__*/React.createElement(Slide, {\n        key: `slide-${index}`,\n        bgImage: item.bgImage,\n        bgColor: item.bgColor,\n        content: item.content,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 9\n        }\n      }));\n    });\n    slides.push( /*#__PURE__*/React.createElement(Slide, {\n      key: 'DuplicatedFirstSlide',\n      id: 'DuplicatedFirstSlide',\n      bgImage: slideArray[0].bgImage,\n      bgColor: slideArray[0].bgColor,\n      content: slideArray[0].content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 7\n      }\n    }));\n    return slides;\n  }\n\n  handleAutoplay() {\n    if (this.props.autoplay) {\n      this.slideInterval = setInterval(this.nextSlide, this.props.autoplayTime);\n    }\n  }\n\n  sliderMouseEnter() {\n    clearInterval(this.slideInterval);\n  }\n\n  sliderMouseLeave() {\n    if (this.props.autoplay) {\n      this.slideInterval = setInterval(this.nextSlide, this.props.autoplayTime);\n    }\n  }\n\n  render() {\n    let buttonContainer = null;\n\n    if (this.props.buttons) {\n      buttonContainer = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"buttons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-arrow-right nextBtn\",\n        onClick: this.nextSlide,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-arrow-left prevBtn\",\n        onClick: this.prevSlide,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    let dotContainer = null;\n\n    if (this.props.dots) {\n      dotContainer = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dots\",\n        key: \"dots\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 22\n        }\n      }, this.getDots());\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"slider\",\n      onMouseEnter: this.sliderMouseEnter,\n      onMouseLeave: this.sliderMouseLeave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"slides-container\",\n      id: \"slides-container\",\n      style: {\n        transition: `transform ${this.state.transformSpeed}s ease-in-out`,\n        transform: `translateX(${this.state.currentSlide.transform}px)`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }\n    }, this.getSlide()), buttonContainer, dotContainer);\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/filipsmasolovs/Downloads/react-image-slider-master/src/Slider.js"],"names":["React","Slide","bg","Slider","Component","constructor","props","state","transformSpeed","currentSlide","slide","transform","nextSlide","bind","prevSlide","dotClick","sliderMouseEnter","sliderMouseLeave","handleLastSlide","handleFirstSlide","handleAutoplay","setState","data","length","sliderContainer","document","getElementById","removeEventListener","addEventListener","event","currentDot","parseInt","currentTarget","getAttribute","getDots","dotsContent","i","dotClassName","push","getSlide","slides","slideArray","bgImage","bgColor","content","forEach","item","index","autoplay","slideInterval","setInterval","autoplayTime","clearInterval","render","buttonContainer","buttons","dotContainer","dots","transition"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Styles.css';\nimport Slide from './Slide'\nimport bg from './assets/1.jpg'\n\nexport default class Slider extends React.Component {\n  constructor (props) {\n    super(props)\n    // this.data = [\n    //   {\n    //     bgColor: 'red',\n    //     content: (\n    //       <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100%'}}>\n    //         Hello!<br/>This is a simple demonstration of slider content</div>\n    //     )\n    //   },\n    //   {\n    //     bgColor: 'blue',\n    //     content: (\n    //       <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100%'}}>\n    //       <h1>Simply add an H1 tag in the content!</h1></div>\n    //     )\n    //   },\n    //   {\n    //     bgColor: 'green',\n    //     content: (\n    //       <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100%'}}>\n    //       <h2>Yes! You should play around with styles...</h2></div>\n    //     )\n    //   },\n    //   {\n    //     bgColor: 'orange',\n    //     content: (\n    //       <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100%'}}>\n    //       <p>And you can!!!</p></div>\n    //     )\n    //   },\n    //   {\n    //     bgImage: bg,\n    //     content: (\n    //       <div style={{display: 'flex', alignItems: 'flex-start', justifyContent: 'center', height: '100%', color: 'white'}}>\n    //       <p>Here is a case of using a background image initially...</p></div>\n    //     )\n    //   },\n    //   {\n    //     bgColor: 'brown',\n    //     content: (\n    //       <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100%'}}>\n    //       <span>Technically I could include a button here, but I put a SPAN!</span></div>\n    //     )\n    //   }\n    // ]\n\n    this.state = {\n        transformSpeed: 1,\n        currentSlide: {\n          slide: 1,\n          transform: -360\n        },\n    }\n    \n    this.nextSlide = this.nextSlide.bind(this)\n    this.prevSlide = this.prevSlide.bind(this)\n    this.dotClick = this.dotClick.bind(this)  \n    this.sliderMouseEnter = this.sliderMouseEnter.bind(this)\n    this.sliderMouseLeave = this.sliderMouseLeave.bind(this)  \n    this.handleLastSlide = this.handleLastSlide.bind(this)\n    this.handleFirstSlide = this.handleFirstSlide.bind(this)\n\n    this.handleAutoplay()\n  }\n\n  handleLastSlide () {\n    this.setState({\n      transformSpeed: 0,\n      currentSlide: {\n        slide: 1,\n        transform: -360\n      }\n    })\n  }\n\n  handleFirstSlide () {\n    this.setState({\n      transformSpeed: 0,\n      currentSlide: {\n        slide: this.data.length,\n        transform: -(this.data.length * 360)\n      }\n    })\n  }\n\n  nextSlide () {\n    let sliderContainer = document.getElementById('slides-container')\n    sliderContainer.removeEventListener('transitionend', this.handleLastSlide)\n    this.setState({ \n      transformSpeed: 1\n    })\n\n    if (this.state.currentSlide.slide === this.data.length) {\n      this.setState({ \n        currentSlide: {\n          slide: 1,\n          transform: this.state.currentSlide.transform - 360\n        }\n      })\n      sliderContainer.addEventListener('transitionend', this.handleLastSlide)\n    } else {\n      this.setState({ \n        currentSlide: {\n          slide: this.state.currentSlide.slide + 1,\n          transform: this.state.currentSlide.transform - 360\n        }\n      })\n    }\n  }\n\n  prevSlide () {\n    let sliderContainer = document.getElementById('slides-container')\n    sliderContainer.removeEventListener('transitionend', this.handleFirstSlide)\n    this.setState({ \n      transformSpeed: 1\n    })\n\n    if (this.state.currentSlide.slide === 1) {\n      this.setState({ \n        currentSlide: {\n          slide: this.data.length,\n          transform: this.state.currentSlide.transform + 360\n        }\n      })\n      sliderContainer.addEventListener('transitionend', this.handleFirstSlide)\n    } else {\n      this.setState({ \n        currentSlide: {\n          slide: this.state.currentSlide.slide - 1,\n          transform: this.state.currentSlide.transform + 360\n        }\n      })\n    }\n  }\n\n  dotClick (event) {\n    let currentDot = parseInt(event.currentTarget.getAttribute('data-dot-index'));\n    this.setState({\n      currentSlide: {\n        slide: currentDot,\n        transform: -(currentDot * 360)\n      }\n    })\n  }\n\n  getDots () {\n    let dotsContent = [];\n    for (let i = 0; i < this.data.length; i++) {\n      let dotClassName = \"dot\";\n      if (i + 1 === this.state.currentSlide.slide) {\n          dotClassName += \" active-dot\";\n      }\n      dotsContent.push(<button className={dotClassName} data-dot-index={i + 1} key={`dot-${i}`} onClick={this.dotClick}></button>)\n    }\n    return dotsContent;\n  }\n\n  getSlide () {\n    let slides = [];\n    let slideArray = this.data\n    \n    slides.push(\n      <Slide\n          key={'DuplicatedLastSlide'}\n          id={'DuplicatedLastSlide'}\n          bgImage={slideArray[slideArray.length - 1].bgImage}\n          bgColor={slideArray[slideArray.length - 1].bgColor}\n          content={slideArray[slideArray.length - 1].content}\n        />\n    )\n\n    slideArray.forEach((item, index) => {\n      slides.push(\n        <Slide\n          key={`slide-${index}`}\n          bgImage={item.bgImage}\n          bgColor={item.bgColor}\n          content={item.content}\n        />\n      )\n    })\n\n    slides.push(\n      <Slide\n          key={'DuplicatedFirstSlide'}\n          id={'DuplicatedFirstSlide'}\n          bgImage={slideArray[0].bgImage}\n          bgColor={slideArray[0].bgColor}\n          content={slideArray[0].content}\n        />\n    )\n\n    return slides;\n  }\n\n  handleAutoplay () {\n    if (this.props.autoplay) {\n      this.slideInterval = setInterval(this.nextSlide, this.props.autoplayTime);\n    }\n  }\n\n  sliderMouseEnter () {\n    clearInterval(this.slideInterval);\n  }\n\n  sliderMouseLeave () {\n    if (this.props.autoplay) {\n      this.slideInterval = setInterval(this.nextSlide, this.props.autoplayTime);\n    }\n  }\n\n  render () {\n    let buttonContainer = null\n    if (this.props.buttons) {\n      buttonContainer = (\n        <div className=\"buttons\">\n          <i className=\"fas fa-arrow-right nextBtn\" onClick={this.nextSlide}></i>\n          <i className=\"fas fa-arrow-left prevBtn\" onClick={this.prevSlide}></i>\n        </div>\n      )\n    }\n    let dotContainer = null\n    if (this.props.dots) {\n      dotContainer = <div className=\"dots\" key=\"dots\">{this.getDots()}</div>\n    }\n\n    return (\n      <div className=\"slider\" onMouseEnter={this.sliderMouseEnter} onMouseLeave={this.sliderMouseLeave}>\n        <div className=\"slides-container\" id=\"slides-container\" style={{transition: `transform ${this.state.transformSpeed}s ease-in-out`, transform: `translateX(${this.state.currentSlide.transform}px)`}}>\n          {this.getSlide()}\n        </div>\n        {buttonContainer}\n        {dotContainer}\n      </div>\n    )\n  }\n};"]},"metadata":{},"sourceType":"module"}