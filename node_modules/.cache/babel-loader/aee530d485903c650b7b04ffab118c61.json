{"ast":null,"code":"var _jsxFileName = \"/Users/filipsmasolovs/Downloads/react-image-slider-master/src/Slider.js\";\nimport React from 'react';\nimport './Styles.css';\nimport Slide from './Slide';\nimport bg from './assets/1.jpg';\nexport default class Slider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.data = [{\n      bgColor: 'red',\n      content: /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }\n      }, \"Hello!\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 19\n        }\n      }), \"This is a simple demonstration of slider content\")\n    }, {\n      bgColor: 'blue',\n      content: /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }\n      }, \"Simply add an H1 tag in the content!\"))\n    }, {\n      bgColor: 'green',\n      content: /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }\n      }, \"Yes! You should play around with styles...\"))\n    }, {\n      bgColor: 'orange',\n      content: /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      }, \"And you can!!!\"))\n    }, {\n      bgImage: bg,\n      content: /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'flex-start',\n          justifyContent: 'center',\n          height: '100%',\n          color: 'white'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }, \"Here is a case of using a background image initially...\"))\n    }, {\n      bgColor: 'brown',\n      content: /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }, \"Technically I could include a button here, but I put a SPAN!\"))\n    }];\n    this.state = {\n      transformSpeed: 1,\n      currentSlide: {\n        slide: 1,\n        transform: -360\n      }\n    };\n    this.nextSlide = this.nextSlide.bind(this);\n    this.prevSlide = this.prevSlide.bind(this);\n    this.dotClick = this.dotClick.bind(this);\n    this.sliderMouseEnter = this.sliderMouseEnter.bind(this);\n    this.sliderMouseLeave = this.sliderMouseLeave.bind(this);\n    this.handleLastSlide = this.handleLastSlide.bind(this);\n    this.handleFirstSlide = this.handleFirstSlide.bind(this);\n    this.handleAutoplay();\n  }\n\n  handleLastSlide() {\n    this.setState({\n      transformSpeed: 0,\n      currentSlide: {\n        slide: 1,\n        transform: -360\n      }\n    });\n  }\n\n  handleFirstSlide() {}\n\n  nextSlide() {\n    let sliderContainer = document.getElementById('slides-container');\n    sliderContainer.removeEventListener('transitionend', this.handleLastSlide);\n    this.setState({\n      transformSpeed: 1\n    });\n\n    if (this.state.currentSlide.slide === this.data.length) {\n      this.setState({\n        currentSlide: {\n          slide: 1,\n          transform: this.state.currentSlide.transform - 360\n        }\n      });\n      sliderContainer.addEventListener('transitionend', this.handleLastSlide);\n    } else {\n      this.setState({\n        currentSlide: {\n          slide: this.state.currentSlide.slide + 1,\n          transform: this.state.currentSlide.transform - 360\n        }\n      });\n    }\n  }\n\n  prevSlide() {\n    if (this.state.currentSlide === 0) {\n      this.setState({\n        currentSlide: this.data.length - 1\n      });\n    } else {\n      this.setState({\n        currentSlide: this.state.currentSlide - 1\n      });\n    }\n  }\n\n  dotClick(event) {\n    let currentDot = parseInt(event.currentTarget.getAttribute('data-dot-index'));\n    this.setState({\n      currentSlide: currentDot\n    });\n  }\n\n  getDots() {\n    let dotsContent = [];\n\n    for (let i = 0; i < this.data.length; i++) {\n      let dotClassName = \"dot\";\n\n      if (i === this.state.currentSlide) {\n        dotClassName += \" active-dot\";\n      }\n\n      dotsContent.push( /*#__PURE__*/React.createElement(\"button\", {\n        className: dotClassName,\n        \"data-dot-index\": i,\n        key: `dot-${i}`,\n        onClick: this.dotClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 24\n        }\n      }));\n    }\n\n    return dotsContent;\n  }\n\n  getSlide() {\n    let slides = [];\n    let slideArray = this.data;\n    slides.push( /*#__PURE__*/React.createElement(Slide, {\n      key: 'DuplicatedLastSlide',\n      id: 'DuplicatedLastSlide',\n      bgImage: slideArray[slideArray.length - 1].bgImage,\n      bgColor: slideArray[slideArray.length - 1].bgColor,\n      content: slideArray[slideArray.length - 1].content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }\n    }));\n    slideArray.forEach((item, index) => {\n      slides.push( /*#__PURE__*/React.createElement(Slide, {\n        key: `slide-${index}`,\n        bgImage: item.bgImage,\n        bgColor: item.bgColor,\n        content: item.content,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 9\n        }\n      }));\n    });\n    slides.push( /*#__PURE__*/React.createElement(Slide, {\n      key: 'DuplicatedFirstSlide',\n      id: 'DuplicatedFirstSlide',\n      bgImage: slideArray[0].bgImage,\n      bgColor: slideArray[0].bgColor,\n      content: slideArray[0].content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 7\n      }\n    }));\n    return slides;\n  }\n\n  handleAutoplay() {\n    if (this.props.autoplay) {\n      this.slideInterval = setInterval(this.nextSlide, this.props.autoplayTime);\n    }\n  }\n\n  sliderMouseEnter() {\n    clearInterval(this.slideInterval);\n  }\n\n  sliderMouseLeave() {\n    if (this.props.autoplay) {\n      this.slideInterval = setInterval(this.nextSlide, this.props.autoplayTime);\n    }\n  }\n\n  render() {\n    let buttonContainer = null;\n\n    if (this.props.buttons) {\n      buttonContainer = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"buttons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-arrow-right nextBtn\",\n        onClick: this.nextSlide,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-arrow-left prevBtn\",\n        onClick: this.prevSlide,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    let dotContainer = null;\n\n    if (this.props.dots) {\n      dotContainer = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dots\",\n        key: \"dots\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 22\n        }\n      }, this.getDots());\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"slider\",\n      onMouseEnter: this.sliderMouseEnter,\n      onMouseLeave: this.sliderMouseLeave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"slides-container\",\n      id: \"slides-container\",\n      style: {\n        transition: `transform ${this.state.transformSpeed}s ease-in-out`,\n        transform: `translateX(${this.state.currentSlide.transform}px)`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }\n    }, this.getSlide()), buttonContainer, dotContainer);\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/filipsmasolovs/Downloads/react-image-slider-master/src/Slider.js"],"names":["React","Slide","bg","Slider","Component","constructor","props","data","bgColor","content","display","alignItems","justifyContent","height","bgImage","color","state","transformSpeed","currentSlide","slide","transform","nextSlide","bind","prevSlide","dotClick","sliderMouseEnter","sliderMouseLeave","handleLastSlide","handleFirstSlide","handleAutoplay","setState","sliderContainer","document","getElementById","removeEventListener","length","addEventListener","event","currentDot","parseInt","currentTarget","getAttribute","getDots","dotsContent","i","dotClassName","push","getSlide","slides","slideArray","forEach","item","index","autoplay","slideInterval","setInterval","autoplayTime","clearInterval","render","buttonContainer","buttons","dotContainer","dots","transition"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Styles.css';\nimport Slide from './Slide'\nimport bg from './assets/1.jpg'\n\nexport default class Slider extends React.Component {\n  constructor (props) {\n    super(props)\n    this.data = [\n      {\n        bgColor: 'red',\n        content: (\n          <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100%'}}>\n            Hello!<br/>This is a simple demonstration of slider content</div>\n        )\n      },\n      {\n        bgColor: 'blue',\n        content: (\n          <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100%'}}>\n          <h1>Simply add an H1 tag in the content!</h1></div>\n        )\n      },\n      {\n        bgColor: 'green',\n        content: (\n          <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100%'}}>\n          <h2>Yes! You should play around with styles...</h2></div>\n        )\n      },\n      {\n        bgColor: 'orange',\n        content: (\n          <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100%'}}>\n          <p>And you can!!!</p></div>\n        )\n      },\n      {\n        bgImage: bg,\n        content: (\n          <div style={{display: 'flex', alignItems: 'flex-start', justifyContent: 'center', height: '100%', color: 'white'}}>\n          <p>Here is a case of using a background image initially...</p></div>\n        )\n      },\n      {\n        bgColor: 'brown',\n        content: (\n          <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100%'}}>\n          <span>Technically I could include a button here, but I put a SPAN!</span></div>\n        )\n      }\n    ]\n\n    this.state = {\n        transformSpeed: 1,\n        currentSlide: {\n          slide: 1,\n          transform: -360\n        },\n    }\n    \n    this.nextSlide = this.nextSlide.bind(this)\n    this.prevSlide = this.prevSlide.bind(this)\n    this.dotClick = this.dotClick.bind(this)  \n    this.sliderMouseEnter = this.sliderMouseEnter.bind(this)\n    this.sliderMouseLeave = this.sliderMouseLeave.bind(this)  \n    this.handleLastSlide = this.handleLastSlide.bind(this)\n    this.handleFirstSlide = this.handleFirstSlide.bind(this)\n\n    this.handleAutoplay()\n  }\n\n  handleLastSlide () {\n    this.setState({\n      transformSpeed: 0,\n      currentSlide: {\n        slide: 1,\n        transform: -360\n      }\n    })\n  }\n\n  handleFirstSlide () {\n\n  }\n\n  nextSlide () {\n    let sliderContainer = document.getElementById('slides-container')\n    sliderContainer.removeEventListener('transitionend', this.handleLastSlide)\n    this.setState({ \n      transformSpeed: 1\n    })\n\n    if (this.state.currentSlide.slide === this.data.length) {\n      this.setState({ \n        currentSlide: {\n          slide: 1,\n          transform: this.state.currentSlide.transform -360\n        }\n      })\n      sliderContainer.addEventListener('transitionend', this.handleLastSlide)\n    } else {\n      this.setState({ \n        currentSlide: {\n          slide: this.state.currentSlide.slide + 1,\n          transform: this.state.currentSlide.transform -360\n        }\n      })\n    }\n  }\n\n  prevSlide () {\n    if (this.state.currentSlide === 0) {\n      this.setState({ currentSlide: this.data.length - 1})\n    } else {\n      this.setState({ currentSlide: this.state.currentSlide - 1})\n    }\n  }\n\n  dotClick (event) {\n    let currentDot = parseInt(event.currentTarget.getAttribute('data-dot-index'));\n    this.setState({ currentSlide: currentDot})\n  }\n\n  getDots () {\n    let dotsContent = [];\n    for (let i = 0; i < this.data.length; i++) {\n      let dotClassName = \"dot\";\n      if (i === this.state.currentSlide) {\n          dotClassName += \" active-dot\";\n      }\n      dotsContent.push(<button className={dotClassName} data-dot-index={i} key={`dot-${i}`} onClick={this.dotClick}></button>)\n    }\n    return dotsContent;\n  }\n\n  getSlide () {\n    let slides = [];\n    let slideArray = this.data\n    \n    slides.push(\n      <Slide\n          key={'DuplicatedLastSlide'}\n          id={'DuplicatedLastSlide'}\n          bgImage={slideArray[slideArray.length - 1].bgImage}\n          bgColor={slideArray[slideArray.length - 1].bgColor}\n          content={slideArray[slideArray.length - 1].content}\n        />\n    )\n\n    slideArray.forEach((item, index) => {\n      slides.push(\n        <Slide\n          key={`slide-${index}`}\n          bgImage={item.bgImage}\n          bgColor={item.bgColor}\n          content={item.content}\n        />\n      )\n    })\n\n    slides.push(\n      <Slide\n          key={'DuplicatedFirstSlide'}\n          id={'DuplicatedFirstSlide'}\n          bgImage={slideArray[0].bgImage}\n          bgColor={slideArray[0].bgColor}\n          content={slideArray[0].content}\n        />\n    )\n\n    return slides;\n  }\n\n  handleAutoplay () {\n    if (this.props.autoplay) {\n      this.slideInterval = setInterval(this.nextSlide, this.props.autoplayTime);\n    }\n  }\n\n  sliderMouseEnter () {\n    clearInterval(this.slideInterval);\n  }\n\n  sliderMouseLeave () {\n    if (this.props.autoplay) {\n      this.slideInterval = setInterval(this.nextSlide, this.props.autoplayTime);\n    }\n  }\n\n  render () {\n    let buttonContainer = null\n    if (this.props.buttons) {\n      buttonContainer = (\n        <div className=\"buttons\">\n          <i className=\"fas fa-arrow-right nextBtn\" onClick={this.nextSlide}></i>\n          <i className=\"fas fa-arrow-left prevBtn\" onClick={this.prevSlide}></i>\n        </div>\n      )\n    }\n    let dotContainer = null\n    if (this.props.dots) {\n      dotContainer = <div className=\"dots\" key=\"dots\">{this.getDots()}</div>\n    }\n\n    return (\n      <div className=\"slider\" onMouseEnter={this.sliderMouseEnter} onMouseLeave={this.sliderMouseLeave}>\n        <div className=\"slides-container\" id=\"slides-container\" style={{transition: `transform ${this.state.transformSpeed}s ease-in-out`, transform: `translateX(${this.state.currentSlide.transform}px)`}}>\n          {this.getSlide()}\n        </div>\n        {buttonContainer}\n        {dotContainer}\n      </div>\n    )\n  }\n};"]},"metadata":{},"sourceType":"module"}