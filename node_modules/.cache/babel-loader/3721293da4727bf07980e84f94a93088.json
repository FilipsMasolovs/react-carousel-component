{"ast":null,"code":"var _jsxFileName = \"/Users/filipsmasolovs/Downloads/react-image-slider-master/src/Slider.js\";\nimport React from 'react';\nimport './Styles.css';\nimport Slide from './Slide';\nimport bg1 from './assets/1.jpg';\nimport bg2 from './assets/2.jpeg';\nimport bg3 from './assets/3.jpg';\nimport bg4 from './assets/4.jpg';\nimport bg5 from './assets/5.jpg';\nexport default class Slider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.data = [{\n      background: bg1,\n      h1: 'AWESOME!',\n      h2: 'Awesome image slider!'\n    }, {\n      background: bg2,\n      h1: 'AWESOME!',\n      h2: 'As explained by J.Konutis.'\n    }, {\n      background: bg3,\n      h1: 'AWESOME!',\n      h2: 'With help of YouTube and Google!'\n    }, {\n      background: bg4,\n      h1: 'AWESOME!',\n      h2: 'Turned out quite nice!'\n    }, {\n      background: bg5,\n      h1: 'AWESOME!',\n      h2: 'Here we go again...'\n    }];\n    this.state = {\n      currentSlide: 0\n    };\n    this.nextSlide = this.nextSlide.bind(this);\n    this.prevSlide = this.prevSlide.bind(this);\n    this.dotClick = this.dotClick.bind(this);\n    this.sliderMouseEnter = this.sliderMouseEnter.bind(this);\n    this.sliderMouseLeave = this.sliderMouseLeave.bind(this);\n    this.handleAutoplay();\n  }\n\n  nextSlide() {\n    if (this.state.currentSlide < this.data.length - 1) {\n      this.setState({\n        currentSlide: this.state.currentSlide + 1\n      });\n    } else {\n      this.setState({\n        currentSlide: 0\n      });\n    }\n  }\n\n  prevSlide() {\n    if (this.state.currentSlide === 0) {\n      this.setState({\n        currentSlide: this.data.length - 1\n      });\n    } else {\n      this.setState({\n        currentSlide: this.state.currentSlide - 1\n      });\n    }\n  }\n\n  dotClick(event) {\n    let currentDot = parseInt(event.currentTarget.getAttribute('data-dot-index'));\n    this.setState({\n      currentSlide: currentDot\n    });\n  }\n\n  getDots() {\n    let dotsContent = [];\n\n    for (let i = 0; i < this.data.length; i++) {\n      let dotClassName = \"dot\";\n\n      if (i === this.state.currentSlide) {\n        dotClassName += \" active-dot\";\n      }\n\n      dotsContent.push( /*#__PURE__*/React.createElement(\"button\", {\n        className: dotClassName,\n        \"data-dot-index\": i,\n        key: `dot-${i}`,\n        onClick: this.dotClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 24\n        }\n      }));\n    }\n\n    return dotsContent;\n  }\n\n  getSlide() {\n    let slides = [];\n    let slideArray = this.data;\n    slideArray.forEach((item, index) => {\n      let isActive = false;\n\n      if (index === this.state.currentSlide) {\n        isActive = true;\n      }\n\n      slides.push( /*#__PURE__*/React.createElement(Slide, {\n        key: `slide-${index}`,\n        bg: item.bg,\n        content: item.content,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }\n      }));\n    });\n    return slides;\n  }\n\n  handleAutoplay() {\n    if (this.props.autoplay) {\n      this.slideInterval = setInterval(this.nextSlide, this.props.autoplayTime);\n    }\n  }\n\n  sliderMouseEnter() {\n    clearInterval(this.slideInterval);\n  }\n\n  sliderMouseLeave() {\n    if (this.props.autoplay) {\n      this.slideInterval = setInterval(this.nextSlide, this.props.autoplayTime);\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    let buttonContainer = null;\n\n    if (this.props.buttons) {\n      buttonContainer = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"buttons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-arrow-right nextBtn\",\n        onClick: this.nextSlide,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-arrow-left prevBtn\",\n        onClick: this.prevSlide,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    let dotContainer = null;\n\n    if (this.props.dots) {\n      dotContainer = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dots\",\n        key: \"dots\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 22\n        }\n      }, this.getDots());\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"slider\",\n      onMouseEnter: this.sliderMouseEnter,\n      onMouseLeave: this.sliderMouseLeave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"slides\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }, this.getSlide()), buttonContainer, dotContainer);\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/filipsmasolovs/Downloads/react-image-slider-master/src/Slider.js"],"names":["React","Slide","bg1","bg2","bg3","bg4","bg5","Slider","Component","constructor","props","data","background","h1","h2","state","currentSlide","nextSlide","bind","prevSlide","dotClick","sliderMouseEnter","sliderMouseLeave","handleAutoplay","length","setState","event","currentDot","parseInt","currentTarget","getAttribute","getDots","dotsContent","i","dotClassName","push","getSlide","slides","slideArray","forEach","item","index","isActive","bg","content","autoplay","slideInterval","setInterval","autoplayTime","clearInterval","render","console","log","buttonContainer","buttons","dotContainer","dots"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Styles.css';\nimport Slide from './Slide'\nimport bg1 from './assets/1.jpg'\nimport bg2 from './assets/2.jpeg'\nimport bg3 from './assets/3.jpg'\nimport bg4 from './assets/4.jpg'\nimport bg5 from './assets/5.jpg'\n\nexport default class Slider extends React.Component {\n  constructor (props) {\n    super(props)\n    this.data = [\n      {\n        background: bg1,\n        h1: 'AWESOME!',\n        h2: 'Awesome image slider!'\n      },\n      {\n        background: bg2,\n        h1: 'AWESOME!',\n        h2: 'As explained by J.Konutis.'\n      },\n      {\n        background: bg3,\n        h1: 'AWESOME!',\n        h2: 'With help of YouTube and Google!'\n      },\n      {\n        background: bg4,\n        h1: 'AWESOME!',\n        h2: 'Turned out quite nice!'\n      },\n      {\n        background: bg5,\n        h1: 'AWESOME!',\n        h2: 'Here we go again...'\n      }\n    ]\n\n    this.state = {\n        currentSlide: 0,\n    }\n    \n    this.nextSlide = this.nextSlide.bind(this)\n    this.prevSlide = this.prevSlide.bind(this)\n    this.dotClick = this.dotClick.bind(this)  \n    this.sliderMouseEnter = this.sliderMouseEnter.bind(this)\n    this.sliderMouseLeave = this.sliderMouseLeave.bind(this)  \n\n    this.handleAutoplay()\n  }\n\n  nextSlide () {\n    if (this.state.currentSlide < this.data.length - 1) {\n      this.setState({ currentSlide: this.state.currentSlide + 1 })\n    } else {\n      this.setState({ currentSlide: 0 })\n    }\n  }\n\n  prevSlide () {\n    if (this.state.currentSlide === 0) {\n      this.setState({ currentSlide: this.data.length - 1})\n    } else {\n      this.setState({ currentSlide: this.state.currentSlide - 1})\n    }\n  }\n\n  dotClick (event) {\n    let currentDot = parseInt(event.currentTarget.getAttribute('data-dot-index'));\n    this.setState({ currentSlide: currentDot})\n  }\n\n  getDots () {\n    let dotsContent = [];\n    for (let i = 0; i < this.data.length; i++) {\n      let dotClassName = \"dot\";\n      if (i === this.state.currentSlide) {\n          dotClassName += \" active-dot\";\n      }\n      dotsContent.push(<button className={dotClassName} data-dot-index={i} key={`dot-${i}`} onClick={this.dotClick}></button>)\n    }\n    return dotsContent;\n  }\n\n  getSlide () {\n    let slides = [];\n    let slideArray = this.data\n    slideArray.forEach((item, index) => {\n      let isActive = false;\n      if (index === this.state.currentSlide) {\n        isActive = true\n      }\n      slides.push(\n        <Slide\n          key={`slide-${index}`}\n          bg={item.bg}\n          content={item.content}\n        />\n      )\n    })\n\n    return slides;\n  }\n\n  handleAutoplay () {\n    if (this.props.autoplay) {\n      this.slideInterval = setInterval(this.nextSlide, this.props.autoplayTime);\n    }\n  }\n\n  sliderMouseEnter () {\n    clearInterval(this.slideInterval);\n  }\n\n  sliderMouseLeave () {\n    if (this.props.autoplay) {\n      this.slideInterval = setInterval(this.nextSlide, this.props.autoplayTime);\n    }\n  }\n\n  render () {\n    console.log(this.props);\n    let buttonContainer = null\n    if (this.props.buttons) {\n      buttonContainer = (\n        <div className=\"buttons\">\n          <i className=\"fas fa-arrow-right nextBtn\" onClick={this.nextSlide}></i>\n          <i className=\"fas fa-arrow-left prevBtn\" onClick={this.prevSlide}></i>\n        </div>\n      )\n    }\n    let dotContainer = null\n    if (this.props.dots) {\n      dotContainer = <div className=\"dots\" key=\"dots\">{this.getDots()}</div>\n    }\n\n    return (\n      <div className=\"slider\" onMouseEnter={this.sliderMouseEnter} onMouseLeave={this.sliderMouseLeave}>\n        <div className=\"slides\">\n          {this.getSlide()}\n        </div>\n        {buttonContainer}\n        {dotContainer}\n      </div>\n    )\n  }\n};"]},"metadata":{},"sourceType":"module"}